@page "/addAdult"
@attribute [Authorize]
@using Family.Models
@using Family.Data
@using Family.Persistence
@using global::Models

@inject IAdultService _adultData
@inject NavigationManager _navigationManager
@inject FileContext _fileContext
<section class="addAdults">
    <h3>Add Adult</h3>


    <EditForm Model="@newAdult" OnValidSubmit="@Submit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <label class="label" for="fName">First name</label>
        <InputText class="input" type="text" id="fName" name="fName" placeholder="First name"
                   @bind-Value="newAdult.FirstName"/>


        <label class="label" for="lName">Last name</label>
        <InputText class="input" type="text" id="lName" name="lName" placeholder="Last name"
                   @bind-Value="newAdult.LastName"/>


        <label class="label" for="age">Age</label>
        <InputNumber class="input" type="number" id="age" name="age" placeholder="Age" @bind-Value="newAdult.Age"/>


        <label class="label" for="sex">Sex</label>
        <InputSelect class="input" id="sex" @bind-Value="newAdult.Sex">
            <option value="">
                Select gender
            </option>
            <option value="M">
                M
            </option>
            <option value="F">
                F
            </option>
            <option value="Other">
                Other
            </option>

        </InputSelect>

        <label class="label" for="hair-color">Hair color</label>
        <InputSelect class="input" id="hair-color" name="hair-color" @bind-Value="newAdult.HairColor">
            <option value="">
                Select color
            </option>
            <option value="Brown">
                Brown
            </option>
            <option value="Black">
                Black
            </option>
            <option value="Blond">
                Blond
            </option>
            <option value="Red">
                Red
            </option>
            <option value="White">
                White
            </option>
            <option value="Other">
                Other
            </option>

        </InputSelect>

        <label class="label" for="eye-color">Eye color</label>
        <InputSelect class="input" id="eye-color" name="eye-color" @bind-Value="newAdult.EyeColor">
            <option value="">
                Select color
            </option>
            <option value="Brown">
                Brown
            </option>
            <option value="Blue">
                Blue
            </option>
            <option value="Amber">
                Amber
            </option>
            <option value="Green">
                Green
            </option>
            <option value="Hazel">
                Hazel
            </option>
            <option value="Gray">
                Gray
            </option>
            <option value="Other">
                Other
            </option>

        </InputSelect>

        <label class="label" for="height">Height</label>
        <InputNumber class="input" type="number" id="height" name="height" placeholder="Height"
                     @bind-Value="newAdult.Height"/>

        <label class="label" for="weight">Weight</label>
        <InputNumber class="input" type="number" id="weight" name="weight" placeholder="Weight"
                     @bind-Value="newAdult.Weight"/>


        <label class="label" for="job">Job</label>
        <InputText class="input" type="text" id="job" name="job" placeholder="Job" @bind-Value="@_job"/>

        <label class="label" for="salary">Salary</label>
        <InputText class="input" type="text" id="salary" name="salary" placeholder="Salary"
                   @bind-Value="@_salary"/>

        <button class="submit__button" type="submit">Submit</button>
    </EditForm>

</section>

@code{
    private Adult newAdult = new Adult();
    private string _job;
    private string _salary;


    public void Submit()
    {
        var job = new Job();
        job.JobTitle = _job;
        job.Salary = Int32.Parse(_salary);
        newAdult.JobTitle = job;

        var id = _fileContext.Adults.Last<Adult>().Id;
        newAdult.Id = id + 1;

        _adultData.AddAdult(newAdult);

        _navigationManager.NavigateTo("/adults");
    }




}